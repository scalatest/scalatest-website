Index.PACKAGES = {"org" : [], "org.scalatestplus" : [], "org.scalatestplus.junit5" : [{"name" : "org.scalatestplus.junit5.AssertionsForJUnit", "object" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html", "members_object" : [{"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "assertionsHelper", "tail" : ": AssertionsHelper", "member" : "org.scalatestplus.junit5.AssertionsForJUnit.assertionsHelper", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#assertionsHelper:org.scalatestplus.junit5.AssertionsForJUnit.AssertionsHelper", "kind" : "val"}, {"label" : "AssertionsHelper", "tail" : "", "member" : "org.scalatestplus.junit5.AssertionsForJUnit.AssertionsHelper", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#AssertionsHelperextendsAnyRef", "kind" : "class"}, {"label" : "toExceptionFunction", "tail" : "(message: Option[String]): (StackDepthException) => Option[String]", "member" : "org.scalatestplus.junit5.AssertionsForJUnit.toExceptionFunction", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#toExceptionFunction(message:Option[String]):org.scalatest.exceptions.StackDepthException=>Option[String]", "kind" : "def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assume", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assume", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assert", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assert", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html", "kind" : "trait", "members_trait" : [{"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "toExceptionFunction", "tail" : "(message: Option[String]): (StackDepthException) => Option[String]", "member" : "org.scalatestplus.junit5.AssertionsForJUnit.toExceptionFunction", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#toExceptionFunction(message:Option[String]):org.scalatest.exceptions.StackDepthException=>Option[String]", "kind" : "def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assume", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assume", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assert", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assert", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/junit5\/AssertionsForJUnit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Trait that contains ScalaTest's basic assertion methods, suitable for use with JUnit 5."}, {"name" : "org.scalatestplus.junit5.JUnitSuite", "shortDescription" : "A suite of tests that can be run with either JUnit or ScalaTest.", "members_class" : [{"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "org.scalatestplus.junit5.JUnitSuite#<init>", "error" : "unsupported entity"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.run", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.testDataFor", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.tags", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.expectedTestCount", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.testNames", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.runTest", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "final def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.runTests", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "final def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.runNestedSuites", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "final def"}, {"label" : "toExceptionFunction", "tail" : "(message: Option[String]): (StackDepthException) => Option[String]", "member" : "org.scalatestplus.junit5.AssertionsForJUnit.toExceptionFunction", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#toExceptionFunction(message:Option[String]):org.scalatest.exceptions.StackDepthException=>Option[String]", "kind" : "def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assume", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assume", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assert", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assert", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.Suite.styleName", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#styleName:String", "kind" : "val"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#suiteName:String", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/junit5\/JUnitSuite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/scalatestplus\/junit5\/JUnitSuite.html", "kind" : "class"}, {"name" : "org.scalatestplus.junit5.JUnitSuiteLike", "trait" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html", "kind" : "trait", "members_trait" : [{"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.run", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.testDataFor", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.tags", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.expectedTestCount", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.testNames", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.runTest", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "final def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.runTests", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "final def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatestplus.junit5.JUnitSuiteLike.runNestedSuites", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "final def"}, {"label" : "toExceptionFunction", "tail" : "(message: Option[String]): (StackDepthException) => Option[String]", "member" : "org.scalatestplus.junit5.AssertionsForJUnit.toExceptionFunction", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#toExceptionFunction(message:Option[String]):org.scalatest.exceptions.StackDepthException=>Option[String]", "kind" : "def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assume", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assume", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assert", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assert", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.Suite.styleName", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#styleName:String", "kind" : "val"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#suiteName:String", "kind" : "def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#nestedSuites:IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/junit5\/JUnitSuiteLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Implementation trait for class JUnitSuite, which representsa suite of tests that can be run with either JUnit 5 or ScalaTest."}, {"name" : "org.scalatestplus.junit5.JUnitTestFailedError", "shortDescription" : "Exception that indicates a test failed in JUnit 5.", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.hashCode", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.equals", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.canEqual", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "modifyPayload", "tail" : "(fun: (Option[Any]) => Option[Any]): JUnitTestFailedError", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.modifyPayload", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#modifyPayload(fun:Option[Any]=>Option[Any]):org.scalatestplus.junit5.JUnitTestFailedError", "kind" : "def"}, {"label" : "modifyMessage", "tail" : "(fun: (Option[String]) => Option[String]): JUnitTestFailedError", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.modifyMessage", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#modifyMessage(fun:Option[String]=>Option[String]):org.scalatestplus.junit5.JUnitTestFailedError", "kind" : "def"}, {"label" : "severedAtStackDepth", "tail" : "(): JUnitTestFailedError", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.severedAtStackDepth", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#severedAtStackDepth:org.scalatestplus.junit5.JUnitTestFailedError", "kind" : "def"}, {"member" : "org.scalatestplus.junit5.JUnitTestFailedError#<init>", "error" : "unsupported entity"}, {"member" : "org.scalatestplus.junit5.JUnitTestFailedError#<init>", "error" : "unsupported entity"}, {"member" : "org.scalatestplus.junit5.JUnitTestFailedError#<init>", "error" : "unsupported entity"}, {"member" : "org.scalatestplus.junit5.JUnitTestFailedError#<init>", "error" : "unsupported entity"}, {"label" : "initCause", "tail" : "(throwable: Throwable): Throwable", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.initCause", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#initCause(throwable:Throwable):Throwable", "kind" : "final def"}, {"label" : "failedCodeStackDepth", "tail" : ": Int", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.failedCodeStackDepth", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#failedCodeStackDepth:Int", "kind" : "lazy val"}, {"label" : "failedCodeFilePathname", "tail" : ": Option[String]", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.failedCodeFilePathname", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#failedCodeFilePathname:Option[String]", "kind" : "lazy val"}, {"label" : "position", "tail" : ": Option[Position]", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.position", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#position:Option[org.scalactic.source.Position]", "kind" : "val"}, {"member" : "org.scalatestplus.junit5.JUnitTestFailedError#<init>", "error" : "unsupported entity"}, {"member" : "org.scalatestplus.junit5.JUnitTestFailedError#<init>", "error" : "unsupported entity"}, {"member" : "org.scalatestplus.junit5.JUnitTestFailedError#<init>", "error" : "unsupported entity"}, {"label" : "payload", "tail" : ": Option[Any]", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.payload", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#payload:Option[Any]", "kind" : "val"}, {"label" : "posOrStackDepth", "tail" : ": Either[Position, Int]", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.posOrStackDepth", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#posOrStackDepth:Either[org.scalactic.source.Position,Int]", "kind" : "val"}, {"label" : "cause", "tail" : ": Option[Throwable]", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.cause", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#cause:Option[Throwable]", "kind" : "val"}, {"label" : "message", "tail" : ": Option[String]", "member" : "org.scalatestplus.junit5.JUnitTestFailedError.message", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#message:Option[String]", "kind" : "val"}, {"label" : "failedCodeLineNumber", "tail" : "(): Option[Int]", "member" : "org.scalatest.exceptions.StackDepth.failedCodeLineNumber", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#failedCodeLineNumber:Option[Int]", "kind" : "def"}, {"label" : "failedCodeFileName", "tail" : "(): Option[String]", "member" : "org.scalatest.exceptions.StackDepth.failedCodeFileName", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#failedCodeFileName:Option[String]", "kind" : "def"}, {"label" : "failedCodeFilePathnameAndLineNumberString", "tail" : ": Option[String]", "member" : "org.scalatest.exceptions.StackDepth.failedCodeFilePathnameAndLineNumberString", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#failedCodeFilePathnameAndLineNumberString:Option[String]", "kind" : "lazy val"}, {"label" : "failedCodeFileNameAndLineNumberString", "tail" : "(): Option[String]", "member" : "org.scalatest.exceptions.StackDepth.failedCodeFileNameAndLineNumberString", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#failedCodeFileNameAndLineNumberString:Option[String]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.opentest4j.AssertionFailedError.toString", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#toString():String", "kind" : "def"}, {"label" : "getActual", "tail" : "(): ValueWrapper", "member" : "org.opentest4j.AssertionFailedError.getActual", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#getActual():org.opentest4j.ValueWrapper", "kind" : "def"}, {"label" : "getExpected", "tail" : "(): ValueWrapper", "member" : "org.opentest4j.AssertionFailedError.getExpected", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#getExpected():org.opentest4j.ValueWrapper", "kind" : "def"}, {"label" : "isActualDefined", "tail" : "(): Boolean", "member" : "org.opentest4j.AssertionFailedError.isActualDefined", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#isActualDefined():Boolean", "kind" : "def"}, {"label" : "isExpectedDefined", "tail" : "(): Boolean", "member" : "org.opentest4j.AssertionFailedError.isExpectedDefined", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#isExpectedDefined():Boolean", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/scalatestplus\/junit5\/JUnitTestFailedError.html", "kind" : "class"}, {"name" : "org.scalatestplus.junit5.ScalaTestClassDescriptor", "shortDescription" : "TestDescriptor for ScalaTest suite.", "object" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html", "members_class" : [{"label" : "getTags", "tail" : "(): Set[TestTag]", "member" : "org.scalatestplus.junit5.ScalaTestClassDescriptor.getTags", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#getTags():java.util.Set[org.junit.platform.engine.TestTag]", "kind" : "def"}, {"label" : "getSource", "tail" : "(): Optional[TestSource]", "member" : "org.scalatestplus.junit5.ScalaTestClassDescriptor.getSource", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#getSource():java.util.Optional[org.junit.platform.engine.TestSource]", "kind" : "def"}, {"label" : "mayRegisterTests", "tail" : "(): Boolean", "member" : "org.scalatestplus.junit5.ScalaTestClassDescriptor.mayRegisterTests", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#mayRegisterTests():Boolean", "kind" : "def"}, {"label" : "getType", "tail" : "(): Type", "member" : "org.scalatestplus.junit5.ScalaTestClassDescriptor.getType", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#getType():org.junit.platform.engine.TestDescriptor.Type", "kind" : "def"}, {"label" : "suite", "tail" : ": Suite", "member" : "org.scalatestplus.junit5.ScalaTestClassDescriptor.suite", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#suite:org.scalatest.Suite", "kind" : "lazy val"}, {"member" : "org.scalatestplus.junit5.ScalaTestClassDescriptor#<init>", "error" : "unsupported entity"}, {"label" : "suiteClass", "tail" : ": Class[_]", "member" : "org.scalatestplus.junit5.ScalaTestClassDescriptor.suiteClass", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#suiteClass:Class[_]", "kind" : "val"}, {"label" : "theUniqueId", "tail" : ": UniqueId", "member" : "org.scalatestplus.junit5.ScalaTestClassDescriptor.theUniqueId", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#theUniqueId:org.junit.platform.engine.UniqueId", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.toString", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: AnyRef): Boolean", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.equals", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#equals(other:Object):Boolean", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.hashCode", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#hashCode():Int", "kind" : "final def"}, {"label" : "findByUniqueId", "tail" : "(uniqueId: UniqueId): Optional[_ <: TestDescriptor]", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.findByUniqueId", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#findByUniqueId(uniqueId:org.junit.platform.engine.UniqueId):java.util.Optional[_<:org.junit.platform.engine.TestDescriptor]", "kind" : "def"}, {"label" : "removeFromHierarchy", "tail" : "(): Unit", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.removeFromHierarchy", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#removeFromHierarchy():Unit", "kind" : "def"}, {"label" : "removeChild", "tail" : "(child: TestDescriptor): Unit", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.removeChild", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#removeChild(child:org.junit.platform.engine.TestDescriptor):Unit", "kind" : "def"}, {"label" : "addChild", "tail" : "(child: TestDescriptor): Unit", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.addChild", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#addChild(child:org.junit.platform.engine.TestDescriptor):Unit", "kind" : "def"}, {"label" : "getChildren", "tail" : "(): Set[_ <: TestDescriptor]", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.getChildren", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#getChildren():java.util.Set[_<:org.junit.platform.engine.TestDescriptor]", "kind" : "final def"}, {"label" : "setParent", "tail" : "(parent: TestDescriptor): Unit", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.setParent", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#setParent(parent:org.junit.platform.engine.TestDescriptor):Unit", "kind" : "final def"}, {"label" : "getParent", "tail" : "(): Optional[TestDescriptor]", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.getParent", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#getParent():java.util.Optional[org.junit.platform.engine.TestDescriptor]", "kind" : "final def"}, {"label" : "getDisplayName", "tail" : "(): String", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.getDisplayName", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#getDisplayName():String", "kind" : "final def"}, {"label" : "getUniqueId", "tail" : "(): UniqueId", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.getUniqueId", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#getUniqueId():org.junit.platform.engine.UniqueId", "kind" : "final def"}, {"label" : "accept", "tail" : "(visitor: Visitor): Unit", "member" : "org.junit.platform.engine.TestDescriptor.accept", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#accept(visitor:org.junit.platform.engine.TestDescriptor.Visitor):Unit", "kind" : "def"}, {"label" : "prune", "tail" : "(): Unit", "member" : "org.junit.platform.engine.TestDescriptor.prune", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#prune():Unit", "kind" : "def"}, {"label" : "isTest", "tail" : "(): Boolean", "member" : "org.junit.platform.engine.TestDescriptor.isTest", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#isTest():Boolean", "kind" : "def"}, {"label" : "isContainer", "tail" : "(): Boolean", "member" : "org.junit.platform.engine.TestDescriptor.isContainer", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#isContainer():Boolean", "kind" : "def"}, {"label" : "isRoot", "tail" : "(): Boolean", "member" : "org.junit.platform.engine.TestDescriptor.isRoot", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#isRoot():Boolean", "kind" : "def"}, {"label" : "getDescendants", "tail" : "(): Set[_ <: TestDescriptor]", "member" : "org.junit.platform.engine.TestDescriptor.getDescendants", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#getDescendants():java.util.Set[_<:org.junit.platform.engine.TestDescriptor]", "kind" : "def"}, {"label" : "getAncestors", "tail" : "(): Set[_ <: TestDescriptor]", "member" : "org.junit.platform.engine.TestDescriptor.getAncestors", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#getAncestors():java.util.Set[_<:org.junit.platform.engine.TestDescriptor]", "kind" : "def"}, {"label" : "getLegacyReportingName", "tail" : "(): String", "member" : "org.junit.platform.engine.TestDescriptor.getLegacyReportingName", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#getLegacyReportingName():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "segmentType", "tail" : ": String", "member" : "org.scalatestplus.junit5.ScalaTestClassDescriptor.segmentType", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#segmentType:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/scalatestplus\/junit5\/ScalaTestClassDescriptor.html", "kind" : "class"}, {"name" : "org.scalatestplus.junit5.ScalaTestDescriptor", "shortDescription" : "TestDescriptor for a test in ScalaTest suite.", "members_class" : [{"label" : "getTags", "tail" : "(): Set[TestTag]", "member" : "org.scalatestplus.junit5.ScalaTestDescriptor.getTags", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#getTags():java.util.Set[org.junit.platform.engine.TestTag]", "kind" : "def"}, {"label" : "getSource", "tail" : "(): Optional[TestSource]", "member" : "org.scalatestplus.junit5.ScalaTestDescriptor.getSource", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#getSource():java.util.Optional[org.junit.platform.engine.TestSource]", "kind" : "def"}, {"label" : "getType", "tail" : "(): Type", "member" : "org.scalatestplus.junit5.ScalaTestDescriptor.getType", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#getType():org.junit.platform.engine.TestDescriptor.Type", "kind" : "def"}, {"member" : "org.scalatestplus.junit5.ScalaTestDescriptor#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.toString", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: AnyRef): Boolean", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.equals", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#equals(other:Object):Boolean", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.hashCode", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#hashCode():Int", "kind" : "final def"}, {"label" : "findByUniqueId", "tail" : "(uniqueId: UniqueId): Optional[_ <: TestDescriptor]", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.findByUniqueId", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#findByUniqueId(uniqueId:org.junit.platform.engine.UniqueId):java.util.Optional[_<:org.junit.platform.engine.TestDescriptor]", "kind" : "def"}, {"label" : "removeFromHierarchy", "tail" : "(): Unit", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.removeFromHierarchy", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#removeFromHierarchy():Unit", "kind" : "def"}, {"label" : "removeChild", "tail" : "(child: TestDescriptor): Unit", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.removeChild", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#removeChild(child:org.junit.platform.engine.TestDescriptor):Unit", "kind" : "def"}, {"label" : "addChild", "tail" : "(child: TestDescriptor): Unit", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.addChild", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#addChild(child:org.junit.platform.engine.TestDescriptor):Unit", "kind" : "def"}, {"label" : "getChildren", "tail" : "(): Set[_ <: TestDescriptor]", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.getChildren", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#getChildren():java.util.Set[_<:org.junit.platform.engine.TestDescriptor]", "kind" : "final def"}, {"label" : "setParent", "tail" : "(parent: TestDescriptor): Unit", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.setParent", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#setParent(parent:org.junit.platform.engine.TestDescriptor):Unit", "kind" : "final def"}, {"label" : "getParent", "tail" : "(): Optional[TestDescriptor]", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.getParent", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#getParent():java.util.Optional[org.junit.platform.engine.TestDescriptor]", "kind" : "final def"}, {"label" : "getDisplayName", "tail" : "(): String", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.getDisplayName", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#getDisplayName():String", "kind" : "final def"}, {"label" : "getUniqueId", "tail" : "(): UniqueId", "member" : "org.junit.platform.engine.support.descriptor.AbstractTestDescriptor.getUniqueId", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#getUniqueId():org.junit.platform.engine.UniqueId", "kind" : "final def"}, {"label" : "accept", "tail" : "(visitor: Visitor): Unit", "member" : "org.junit.platform.engine.TestDescriptor.accept", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#accept(visitor:org.junit.platform.engine.TestDescriptor.Visitor):Unit", "kind" : "def"}, {"label" : "prune", "tail" : "(): Unit", "member" : "org.junit.platform.engine.TestDescriptor.prune", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#prune():Unit", "kind" : "def"}, {"label" : "mayRegisterTests", "tail" : "(): Boolean", "member" : "org.junit.platform.engine.TestDescriptor.mayRegisterTests", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#mayRegisterTests():Boolean", "kind" : "def"}, {"label" : "isTest", "tail" : "(): Boolean", "member" : "org.junit.platform.engine.TestDescriptor.isTest", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#isTest():Boolean", "kind" : "def"}, {"label" : "isContainer", "tail" : "(): Boolean", "member" : "org.junit.platform.engine.TestDescriptor.isContainer", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#isContainer():Boolean", "kind" : "def"}, {"label" : "isRoot", "tail" : "(): Boolean", "member" : "org.junit.platform.engine.TestDescriptor.isRoot", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#isRoot():Boolean", "kind" : "def"}, {"label" : "getDescendants", "tail" : "(): Set[_ <: TestDescriptor]", "member" : "org.junit.platform.engine.TestDescriptor.getDescendants", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#getDescendants():java.util.Set[_<:org.junit.platform.engine.TestDescriptor]", "kind" : "def"}, {"label" : "getAncestors", "tail" : "(): Set[_ <: TestDescriptor]", "member" : "org.junit.platform.engine.TestDescriptor.getAncestors", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#getAncestors():java.util.Set[_<:org.junit.platform.engine.TestDescriptor]", "kind" : "def"}, {"label" : "getLegacyReportingName", "tail" : "(): String", "member" : "org.junit.platform.engine.TestDescriptor.getLegacyReportingName", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#getLegacyReportingName():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/scalatestplus\/junit5\/ScalaTestDescriptor.html", "kind" : "class"}, {"name" : "org.scalatestplus.junit5.ScalaTestEngine", "shortDescription" : "ScalaTest implementation for JUnit 5 Test Engine.", "members_class" : [{"label" : "execute", "tail" : "(request: ExecutionRequest): Unit", "member" : "org.scalatestplus.junit5.ScalaTestEngine.execute", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#execute(request:org.junit.platform.engine.ExecutionRequest):Unit", "kind" : "def"}, {"label" : "discover", "tail" : "(discoveryRequest: EngineDiscoveryRequest, uniqueId: UniqueId): TestDescriptor", "member" : "org.scalatestplus.junit5.ScalaTestEngine.discover", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#discover(discoveryRequest:org.junit.platform.engine.EngineDiscoveryRequest,uniqueId:org.junit.platform.engine.UniqueId):org.junit.platform.engine.TestDescriptor", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "org.scalatestplus.junit5.ScalaTestEngine.getId", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#getId():String", "kind" : "def"}, {"member" : "org.scalatestplus.junit5.ScalaTestEngine#<init>", "error" : "unsupported entity"}, {"label" : "getVersion", "tail" : "(): Optional[String]", "member" : "org.junit.platform.engine.TestEngine.getVersion", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#getVersion():java.util.Optional[String]", "kind" : "def"}, {"label" : "getArtifactId", "tail" : "(): Optional[String]", "member" : "org.junit.platform.engine.TestEngine.getArtifactId", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#getArtifactId():java.util.Optional[String]", "kind" : "def"}, {"label" : "getGroupId", "tail" : "(): Optional[String]", "member" : "org.junit.platform.engine.TestEngine.getGroupId", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#getGroupId():java.util.Optional[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/scalatestplus\/junit5\/ScalaTestEngine.html", "kind" : "class"}, {"name" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit", "trait" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html", "kind" : "trait", "members_trait" : [{"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assume", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assume", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assert", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatestplus.junit5.VersionSpecificAssertionsForJUnit.assert", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: => Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: => T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: => Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) => A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) => B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/junit5\/VersionSpecificAssertionsForJUnit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}]};