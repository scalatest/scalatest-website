Index.PACKAGES = {"org" : [], "org.scalatestplus" : [], "org.scalatestplus.jmock" : [{"name" : "org.scalatestplus.jmock.AsyncJMockCycleFixture", "trait" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html", "kind" : "trait", "members_trait" : [{"label" : "withFixture", "tail" : "(test: (AsyncJMockCycleFixture.this)#OneArgAsyncTest): FutureOutcome", "member" : "org.scalatestplus.jmock.AsyncJMockCycleFixture.withFixture", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#withFixture(test:AsyncJMockCycleFixture.this.OneArgAsyncTest):org.scalatest.FutureOutcome", "kind" : "def"}, {"label" : "FixtureParam", "tail" : "", "member" : "org.scalatestplus.jmock.AsyncJMockCycleFixture.FixtureParam", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#FixtureParam=org.scalatestplus.jmock.JMockCycle", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/jmock\/AsyncJMockCycleFixture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Trait that will pass a new JMockCycle into any test that needs one."}, {"name" : "org.scalatestplus.jmock.JMockCycle", "shortDescription" : "Class that wraps and manages the lifecycle of a single org.jmock.Mockery context object,provides some basic syntax sugar for using JMockin Scala.", "members_class" : [{"label" : "whenExecuting", "tail" : "(fun: => Unit): Unit", "member" : "org.scalatestplus.jmock.JMockCycle.whenExecuting", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#whenExecuting(fun:=>Unit):Unit", "kind" : "def"}, {"label" : "expecting", "tail" : "(fun: (JMockExpectations) => Unit): Unit", "member" : "org.scalatestplus.jmock.JMockCycle.expecting", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#expecting(fun:org.scalatestplus.jmock.JMockExpectations=>Unit):Unit", "kind" : "def"}, {"label" : "mock", "tail" : "(classTag: ClassTag[T]): T", "member" : "org.scalatestplus.jmock.JMockCycle.mock", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#mock[T<:AnyRef](implicitclassTag:scala.reflect.ClassTag[T]):T", "kind" : "def"}, {"member" : "org.scalatestplus.jmock.JMockCycle#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/jmock\/JMockCycle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/scalatestplus\/jmock\/JMockCycle.html", "kind" : "class"}, {"name" : "org.scalatestplus.jmock.JMockCycleFixture", "trait" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html", "kind" : "trait", "members_trait" : [{"label" : "withFixture", "tail" : "(test: (JMockCycleFixture.this)#OneArgTest): Outcome", "member" : "org.scalatestplus.jmock.JMockCycleFixture.withFixture", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#withFixture(test:JMockCycleFixture.this.OneArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "FixtureParam", "tail" : "", "member" : "org.scalatestplus.jmock.JMockCycleFixture.FixtureParam", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#FixtureParam=org.scalatestplus.jmock.JMockCycle", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/jmock\/JMockCycleFixture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Trait that will pass a new JMockCycle into any test that needs one."}, {"name" : "org.scalatestplus.jmock.JMockExpectations", "shortDescription" : "Subclass of org.jmock.Expectations that provides withArgalternatives to the with methods defined in its superclass.", "members_class" : [{"label" : "withArg", "tail" : "(matcher: Matcher[Char]): Char", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(matcher:org.hamcrest.Matcher[Char]):Char", "kind" : "def"}, {"label" : "withArg", "tail" : "(matcher: Matcher[Double]): Double", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(matcher:org.hamcrest.Matcher[Double]):Double", "kind" : "def"}, {"label" : "withArg", "tail" : "(matcher: Matcher[Float]): Float", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(matcher:org.hamcrest.Matcher[Float]):Float", "kind" : "def"}, {"label" : "withArg", "tail" : "(matcher: Matcher[Boolean]): Boolean", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(matcher:org.hamcrest.Matcher[Boolean]):Boolean", "kind" : "def"}, {"label" : "withArg", "tail" : "(matcher: Matcher[Long]): Long", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(matcher:org.hamcrest.Matcher[Long]):Long", "kind" : "def"}, {"label" : "withArg", "tail" : "(matcher: Matcher[Byte]): Byte", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(matcher:org.hamcrest.Matcher[Byte]):Byte", "kind" : "def"}, {"label" : "withArg", "tail" : "(matcher: Matcher[Short]): Short", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(matcher:org.hamcrest.Matcher[Short]):Short", "kind" : "def"}, {"label" : "withArg", "tail" : "(matcher: Matcher[Int]): Int", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(matcher:org.hamcrest.Matcher[Int]):Int", "kind" : "def"}, {"label" : "withArg", "tail" : "(matcher: Matcher[T]): T", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg[T](matcher:org.hamcrest.Matcher[T]):T", "kind" : "def"}, {"label" : "withArg", "tail" : "(value: Char): Char", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(value:Char):Char", "kind" : "def"}, {"label" : "withArg", "tail" : "(value: Double): Double", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(value:Double):Double", "kind" : "def"}, {"label" : "withArg", "tail" : "(value: Float): Float", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(value:Float):Float", "kind" : "def"}, {"label" : "withArg", "tail" : "(value: Boolean): Boolean", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(value:Boolean):Boolean", "kind" : "def"}, {"label" : "withArg", "tail" : "(value: Long): Long", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(value:Long):Long", "kind" : "def"}, {"label" : "withArg", "tail" : "(value: Byte): Byte", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(value:Byte):Byte", "kind" : "def"}, {"label" : "withArg", "tail" : "(value: Short): Short", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(value:Short):Short", "kind" : "def"}, {"label" : "withArg", "tail" : "(value: Int): Int", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg(value:Int):Int", "kind" : "def"}, {"label" : "withArg", "tail" : "(value: T): T", "member" : "org.scalatestplus.jmock.JMockExpectations.withArg", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#withArg[T](value:T):T", "kind" : "def"}, {"member" : "org.scalatestplus.jmock.JMockExpectations#<init>", "error" : "unsupported entity"}, {"label" : "with", "tail" : "(arg0: Matcher[Double]): Double", "member" : "org.jmock.Expectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:org.hamcrest.Matcher[Double]):Double", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Matcher[Float]): Float", "member" : "org.jmock.Expectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:org.hamcrest.Matcher[Float]):Float", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Matcher[Long]): Long", "member" : "org.jmock.Expectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:org.hamcrest.Matcher[Long]):Long", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Matcher[Integer]): Int", "member" : "org.jmock.Expectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:org.hamcrest.Matcher[Integer]):Int", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Matcher[Character]): Char", "member" : "org.jmock.Expectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:org.hamcrest.Matcher[Character]):Char", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Matcher[Short]): Short", "member" : "org.jmock.Expectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:org.hamcrest.Matcher[Short]):Short", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Matcher[Byte]): Byte", "member" : "org.jmock.Expectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:org.hamcrest.Matcher[Byte]):Byte", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Matcher[Boolean]): Boolean", "member" : "org.jmock.Expectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:org.hamcrest.Matcher[Boolean]):Boolean", "kind" : "def"}, {"label" : "inSequences", "tail" : "(arg0: <repeated...>[Sequence]): Unit", "member" : "org.jmock.AbstractExpectations.inSequences", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#inSequences(x$1:org.jmock.Sequence*):Unit", "kind" : "def"}, {"label" : "inSequence", "tail" : "(arg0: Sequence): Unit", "member" : "org.jmock.AbstractExpectations.inSequence", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#inSequence(x$1:org.jmock.Sequence):Unit", "kind" : "def"}, {"label" : "then", "tail" : "(arg0: State): Unit", "member" : "org.jmock.AbstractExpectations.then", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#then(x$1:org.jmock.internal.State):Unit", "kind" : "def"}, {"label" : "when", "tail" : "(arg0: StatePredicate): Unit", "member" : "org.jmock.AbstractExpectations.when", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#when(x$1:org.jmock.internal.StatePredicate):Unit", "kind" : "def"}, {"label" : "will", "tail" : "(arg0: Action): Unit", "member" : "org.jmock.AbstractExpectations.will", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#will(x$1:org.jmock.api.Action):Unit", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: T): T", "member" : "org.jmock.AbstractExpectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with[T](x$1:T):T", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Double): Double", "member" : "org.jmock.AbstractExpectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:Double):Double", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Float): Float", "member" : "org.jmock.AbstractExpectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:Float):Float", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Long): Long", "member" : "org.jmock.AbstractExpectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:Long):Long", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Int): Int", "member" : "org.jmock.AbstractExpectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:Int):Int", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Char): Char", "member" : "org.jmock.AbstractExpectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:Char):Char", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Short): Short", "member" : "org.jmock.AbstractExpectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:Short):Short", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Byte): Byte", "member" : "org.jmock.AbstractExpectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:Byte):Byte", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Boolean): Boolean", "member" : "org.jmock.AbstractExpectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with(x$1:Boolean):Boolean", "kind" : "def"}, {"label" : "with", "tail" : "(arg0: Matcher[T]): T", "member" : "org.jmock.AbstractExpectations.with", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#with[T](x$1:org.hamcrest.Matcher[T]):T", "kind" : "def"}, {"label" : "addParameterMatcher", "tail" : "(arg0: Matcher[_ <: AnyRef]): Unit", "member" : "org.jmock.AbstractExpectations.addParameterMatcher", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#addParameterMatcher(x$1:org.hamcrest.Matcher[_]):Unit", "kind" : "def"}, {"label" : "never", "tail" : "(arg0: T): T", "member" : "org.jmock.AbstractExpectations.never", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#never[T](x$1:T):T", "kind" : "def"}, {"label" : "ignoring", "tail" : "(arg0: Matcher[_ <: AnyRef]): MethodClause", "member" : "org.jmock.AbstractExpectations.ignoring", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#ignoring(x$1:org.hamcrest.Matcher[_]):org.jmock.syntax.MethodClause", "kind" : "def"}, {"label" : "ignoring", "tail" : "(arg0: T): T", "member" : "org.jmock.AbstractExpectations.ignoring", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#ignoring[T](x$1:T):T", "kind" : "def"}, {"label" : "allowing", "tail" : "(arg0: T): T", "member" : "org.jmock.AbstractExpectations.allowing", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#allowing[T](x$1:T):T", "kind" : "def"}, {"label" : "allowing", "tail" : "(arg0: Matcher[_ <: AnyRef]): MethodClause", "member" : "org.jmock.AbstractExpectations.allowing", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#allowing(x$1:org.hamcrest.Matcher[_]):org.jmock.syntax.MethodClause", "kind" : "def"}, {"label" : "atMost", "tail" : "(arg0: Int): ReceiverClause", "member" : "org.jmock.AbstractExpectations.atMost", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#atMost(x$1:Int):org.jmock.syntax.ReceiverClause", "kind" : "def"}, {"label" : "between", "tail" : "(arg0: Int, arg1: Int): ReceiverClause", "member" : "org.jmock.AbstractExpectations.between", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#between(x$1:Int,x$2:Int):org.jmock.syntax.ReceiverClause", "kind" : "def"}, {"label" : "atLeast", "tail" : "(arg0: Int): ReceiverClause", "member" : "org.jmock.AbstractExpectations.atLeast", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#atLeast(x$1:Int):org.jmock.syntax.ReceiverClause", "kind" : "def"}, {"label" : "one", "tail" : "(arg0: T): T", "member" : "org.jmock.AbstractExpectations.one", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#one[T](x$1:T):T", "kind" : "def"}, {"label" : "oneOf", "tail" : "(arg0: T): T", "member" : "org.jmock.AbstractExpectations.oneOf", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#oneOf[T](x$1:T):T", "kind" : "def"}, {"label" : "exactly", "tail" : "(arg0: Int): ReceiverClause", "member" : "org.jmock.AbstractExpectations.exactly", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#exactly(x$1:Int):org.jmock.syntax.ReceiverClause", "kind" : "def"}, {"label" : "currentBuilder", "tail" : "(): InvocationExpectationBuilder", "member" : "org.jmock.AbstractExpectations.currentBuilder", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#currentBuilder():org.jmock.internal.InvocationExpectationBuilder", "kind" : "def"}, {"label" : "buildExpectations", "tail" : "(arg0: Action, arg1: ExpectationCollector): Unit", "member" : "org.jmock.AbstractExpectations.buildExpectations", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#buildExpectations(x$1:org.jmock.api.Action,x$2:org.jmock.api.ExpectationCollector):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/scalatestplus\/jmock\/JMockExpectations.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/scalatestplus\/jmock\/JMockExpectations.html", "kind" : "class"}]};